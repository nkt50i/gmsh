import streamlit as st
from PIL import Image
import base64
import subprocess
import os
import math
import gmsh
import numpy as np
import matplotlib.pyplot as plt
import multiprocessing
import plotly.graph_objects as go  # –î–ª—è 3D-–≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏

st.set_page_config(page_title="üìã", layout="wide")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–¥–∞ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
def show_code(code, language="python"):
    st.code(code, language)

def run_gmsh(file_path):
    try:
        env = os.environ.copy()
        env["LIBGL_ALWAYS_SOFTWARE"] = "1"  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥
        subprocess.run(["gmsh", file_path], check=True, env=env)
        st.success("Gmsh —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –≤ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–º —Ä–µ–∂–∏–º–µ!")
    except FileNotFoundError:
        st.error("Gmsh –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ PATH.")
    except subprocess.CalledProcessError as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ Gmsh: {e.returncode}")
        st.text(f"–í—ã–≤–æ–¥ –æ—à–∏–±–∫–∏:\n{e.stderr}")

sections = {
    "–û–±—â–∞—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ –ü–û": "",
    "–û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ Gmsh": "",
    "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ Gmsh": "",
    "–°—Å—ã–ª–∫–∏":"",
}

choice = st.sidebar.radio("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª", list(sections.keys()))

if choice == "–û–±—â–∞—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ –ü–û":
    st.write("""##### –û–±—â–∞—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ –ü–û""")
    st.write(
            """
            **Gmsh** ‚Äî —ç—Ç–æ –æ—Ç–∫—Ä—ã—Ç–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω–µ—á–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (mesh generation).
            –û–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —á–∏—Å–ª–µ–Ω–Ω–æ–º –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–æ–π –º–µ—Ö–∞–Ω–∏–∫–µ, –æ—Å–æ–±–µ–Ω–Ω–æ –≤ –º–µ—Ç–æ–¥–µ –∫–æ–Ω–µ—á–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (FEM).
            """
        )

elif choice == "–û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ Gmsh":
    st.write("""##### –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ Gmsh""")
    st.markdown(
        """
        - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–≤—É–º–µ—Ä–Ω—ã—Ö –∏ —Ç—Ä–µ—Ö–º–µ—Ä–Ω—ã—Ö —Å–µ—Ç–æ–∫
        - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (—Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∏, —Ç–µ—Ç—Ä–∞—ç–¥—Ä—ã, –≥–µ–∫—Å–∞—ç–¥—Ä—ã –∏ —Ç. –¥.)
        - –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —è–∑—ã–∫ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ (Gmsh scripting language)
        - –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –∏ –ø–æ—Å—Ç–æ–±—Ä–∞–±–æ—Ç–∫–∞
        - –ò–º–ø–æ—Ä—Ç –∏ —ç–∫—Å–ø–æ—Ä—Ç –≤ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã (STEP, STL, MSH –∏ –¥—Ä.)
        - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏—è
        """
        )
elif choice == "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ Gmsh":
    st.write("""##### –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ Gmsh""")
    st.write(
        """
        - –ê—ç—Ä–æ–¥–∏–Ω–∞–º–∏–∫–∞
        - –ú–∞—à–∏–Ω–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ
        - –ë–∏–æ–º–µ—Ö–∞–Ω–∏–∫–∞
        - –≠–ª–µ–∫—Ç—Ä–æ–º–∞–≥–Ω–µ—Ç–∏–∑–º
        - –ì–µ–æ—Ñ–∏–∑–∏–∫–∞
        - ...
        """
        )
elif choice == "–ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ç–∫–∏":
    st.write("""##### –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ç–∫–∏""")
    code = """
        // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
        SetFactory("OpenCASCADE");
        lc = 1e-2;

        // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–æ—á–µ–∫
        Point(1) = {0, 0, 0, lc};
        Point(2) = {.1, 0, 0, lc};
        Point(3) = {.1, .3, 0, lc};
        Point(4) = {0, .3, 0, lc};

        // –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –æ—Ç—Ä–µ–∑–∫–æ–≤
        Line(1) = {1, 2};
        Line(2) = {2, 3}; 
        Line(3) = {3, 4};
        Line(4) = {4, 1};

        // –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –∑–∞–º–∫–Ω—É—Ç–æ–≥–æ –∫–æ–Ω—Ç—É—Ä–∞, –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏
        Curve Loop(1) = {4, 1, -2, 3};
        Plane Surface(1) = {1};

        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ç–∫–∏
        Geometry.PointNumbers = 1;
        Geometry.Color.Points = {160, 255, 0};
        General.Color.Text = White;
        Geometry.Color.Surfaces = Geometry.Color.Points;

        // 2-D —Å–µ—Ç–∫–∞
        Mesh 2;
        
    """
    
    st.code(code, language="python")
    
    if st.button("–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–º–µ—Ä"):
        file_path = "example.geo"
        with open(file_path, "w") as f:
            f.write(code)
        run_gmsh(file_path)

elif choice == "–°—Å—ã–ª–∫–∏ –∏ —Ä–µ—Å—É—Ä—Å—ã":
    st.write("""##### –°—Å—ã–ª–∫–∏""")
    st.markdown("[–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç Gmsh](https://gmsh.info/)")
    st.markdown("[–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è Gmsh](https://gmsh.info/doc/texinfo/gmsh.html)")