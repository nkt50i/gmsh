import streamlit as st
from PIL import Image
import base64
import subprocess
import os
import math
import gmsh
import numpy as np
import matplotlib.pyplot as plt
import multiprocessing
import plotly.graph_objects as go  # –î–ª—è 3D-–≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏

st.set_page_config(page_title="üìë", layout="wide")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–¥–∞ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
def show_code(code, language="python"):
    st.code(code, language)

def run_gmsh(file_path):
    try:
        env = os.environ.copy()
        env["LIBGL_ALWAYS_SOFTWARE"] = "1"  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥
        subprocess.run(["gmsh", file_path], check=True, env=env)
        st.success("Gmsh —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –≤ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–º —Ä–µ–∂–∏–º–µ!")
    except FileNotFoundError:
        st.error("Gmsh –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ PATH.")
    except subprocess.CalledProcessError as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ Gmsh: {e.returncode}")
        st.text(f"–í—ã–≤–æ–¥ –æ—à–∏–±–∫–∏:\n{e.stderr}")

sections = {
    "1. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≥–µ–æ–º–µ—Ç—Ä–∏–∏": "",
    "2. –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤": "",
    "3. –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ 3D –æ–±—ä–µ–∫—Ç–æ–≤ –∏ –æ–ø–µ—Ä–∞—Ü–∏–π": "",
    "4. –°–æ–∑–¥–∞–Ω–∏–µ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ª–∏–Ω–∏–π, –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–µ–π –∏ —Ç–µ–ª":"",
    "5. –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Å–ø–∏—Ä–∞–ª–∏": "",
    "6. –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ç–∫–∏": "",
    "7. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ—Ç–∫–∏": "",
    "8. –ü—Ä–∏–º–µ—Ä —Ñ–∞–π–ª–∞ .geo": "",
}

choice = st.sidebar.radio("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª", list(sections.keys()))


if choice == "1. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≥–µ–æ–º–µ—Ç—Ä–∏–∏":
    # 1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–∞–±—Ä–∏–∫–∏ –≥–µ–æ–º–µ—Ç—Ä–∏–∏
    st.write("""##### 1. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –≥–µ–æ–º–µ—Ç—Ä–∏–∏""")
    st.write("""
     - –ö–æ–º–∞–Ω–¥–∞ `SetFactory("OpenCASCADE");` —É–∫–∞–∑—ã–≤–∞–µ—Ç Gmsh –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫—É OpenCASCADE –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –≥–µ–æ–º–µ—Ç—Ä–∏–∏. 
    –≠—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–ª–æ–∂–Ω—ã—Ö –≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤, —Ç–∞–∫–∏—Ö –∫–∞–∫ –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏ –∏ —ç–∫—Å—Ç—Ä—É–∑–∏–∏.
    """)

elif choice == "2. –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤":

    st.write("""##### 2. –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤""")
    st.write("""
    –í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ —Å–æ–∑–¥–∞—é—Ç—Å—è –±–∞–∑–æ–≤—ã–µ –≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã.
    """)

    # Circle(x) = {...}
    st.write("""**–°–æ–∑–¥–∞–Ω–∏–µ –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–µ–π (Circle)**""")
    st.write("""
     - –ö–æ–º–∞–Ω–¥–∞ `Circle(x) = {...};` –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏. 
    –í –ø—Ä–∏–º–µ—Ä–µ –∑–∞–¥–∞—é—Ç—Å—è –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏ —Å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ —Ü–µ–Ω—Ç—Ä–∞ –∏ —Ä–∞–¥–∏—É—Å–æ–º.
    - `Circle(1) = {0, 0, 0, 0.5};` —Å–æ–∑–¥–∞—ë—Ç –æ–∫—Ä—É–∂–Ω–æ—Å—Ç—å —Å —Ü–µ–Ω—Ç—Ä–æ–º –≤ –Ω–∞—á–∞–ª–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –∏ —Ä–∞–¥–∏—É—Å–æ–º 0.5.
    """)

    # Curve Loop(x) = {...}
    st.write("""**–°–æ–∑–¥–∞–Ω–∏–µ –∫—Ä–∏–≤—ã—Ö –∏ –∑–∞–º–∫–Ω—É—Ç—ã—Ö –∫–æ–Ω—Ç—É—Ä–æ–≤ (Curve Loop)**""")
    st.write("""
     - –ö–æ–º–∞–Ω–¥–∞ `Curve Loop(x) = {...};` –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫—Ä–∏–≤—ã—Ö –≤ –∑–∞–º–∫–Ω—É—Ç—ã–π –∫–æ–Ω—Ç—É—Ä, 
    –∫–æ—Ç–æ—Ä—ã–π –∑–∞—Ç–µ–º –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–µ–π.
    - `Curve Loop(1) = {1};` —Å–æ–∑–¥–∞—ë—Ç –∫–æ–Ω—Ç—É—Ä –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–µ—Ä–≤–æ–π –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏.
    """)

    # ThruSections(x) = {...}
    st.write("""**–≠–∫—Å—Ç—Ä—É–∑–∏—è —á–µ—Ä–µ–∑ —Å–µ—á–µ–Ω–∏—è (ThruSections)**""")
    st.write("""
     - –ö–æ–º–∞–Ω–¥–∞ `ThruSections(x) = {...};` –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è 3D-–æ–±—ä–µ–∫—Ç–æ–≤ –ø—É—Ç—ë–º —ç–∫—Å—Ç—Ä—É–∑–∏–∏ –∏–ª–∏ –≤—Ä–∞—â–µ–Ω–∏—è. 
    –í –ø—Ä–∏–º–µ—Ä–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —ç–∫—Å—Ç—Ä—É–∑–∏—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–µ–π, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —Ü–∏–ª–∏–Ω–¥—Ä.
    """)

    # Ruled ThruSections(x) = {...}
    st.write("""**–ü—Ä–∞–≤–∏–ª–∞ —ç–∫—Å—Ç—Ä—É–∑–∏–∏ (Ruled ThruSections)**""")
    st.write("""
     - –ö–æ–º–∞–Ω–¥–∞ `Ruled ThruSections(x) = {...};` —É–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —ç–∫—Å—Ç—Ä—É–∑–∏—Ä–æ–≤–∞—Ç—å –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å, –∏—Å–ø–æ–ª—å–∑—É—è –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ –∫—Ä–∏–≤—ã–µ.
    """)

    # Translate{...} {...}
    st.write("""**–ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ (Translate)**""")
    st.write("""
     - –ö–æ–º–∞–Ω–¥–∞ `Translate{...} {...};` –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç –≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–π –æ–±—ä–µ–∫—Ç –≤ –Ω–æ–≤–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ. 
    –ù–∞–ø—Ä–∏–º–µ—Ä, –∫–æ–º–∞–Ω–¥–∞ –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç —ç–∫—Å—Ç—Ä—É–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç.
    """)

    # Fillet{...}
    st.write("""**–ó–∞–∫—Ä—É–≥–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ (Fillet)**""")
    st.write("""
     - –ö–æ–º–∞–Ω–¥–∞ `Fillet{...};` —Å–æ–∑–¥–∞—ë—Ç –∑–∞–∫—Ä—É–≥–ª–µ–Ω–∏—è –Ω–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–∏ –æ–±—ä–µ–∫—Ç–æ–≤, —Å–≥–ª–∞–∂–∏–≤–∞—è —É–≥–ª—ã.
    """)

elif choice == "3. –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ 3D –æ–±—ä–µ–∫—Ç–æ–≤ –∏ –æ–ø–µ—Ä–∞—Ü–∏–π":
    st.write("""##### 3. –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ 3D –æ–±—ä–µ–∫—Ç–æ–≤ –∏ –æ–ø–µ—Ä–∞—Ü–∏–π""")

    # Volume
    st.write("""**–°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–º–æ–≤ (Volume)**""")
    st.write("""
     - –ö–æ–º–∞–Ω–¥–∞ `Volume{...};` –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–º–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–µ—Ç–∫–∏.
    """)

    # Rotate{...}
    st.write("""**–ü–æ–≤–æ—Ä–æ—Ç –æ–±—ä–µ–∫—Ç–æ–≤ (Rotate)**""")
    st.write("""
     - –ö–æ–º–∞–Ω–¥–∞ `Rotate{...};` –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç –ø–æ–≤–æ—Ä–æ—Ç –æ–±—ä–µ–∫—Ç–∞ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ. –ù–∞–ø—Ä–∏–º–µ—Ä, –º–æ–∂–Ω–æ –ø–æ–≤–µ—Ä–Ω—É—Ç—å –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å –∏–ª–∏ –æ–±—ä–µ–º.
    """)

    # Extrude
    st.write("""**–≠–∫—Å—Ç—Ä—É–∑–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ (Extrude)**""")
    st.write("""
     - –ö–æ–º–∞–Ω–¥–∞ `Extrude {...};` –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–º–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –ø—É—Ç—ë–º —ç–∫—Å—Ç—Ä—É–∑–∏–∏ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–µ–π.
    """)

elif choice == "4. –°–æ–∑–¥–∞–Ω–∏–µ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ª–∏–Ω–∏–π, –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–µ–π –∏ —Ç–µ–ª":

    st.write("""##### 4. –°–æ–∑–¥–∞–Ω–∏–µ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ª–∏–Ω–∏–π, –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–µ–π –∏ —Ç–µ–ª""")

    # Abs(Boundary{...})
    st.write("""**–û–±—Ä–∞–±–æ—Ç–∫–∞ –≥—Ä–∞–Ω–∏—Ü (Abs(Boundary))**""")
    st.write("""
     - –ö–æ–º–∞–Ω–¥–∞ `Abs(Boundary{ Volume{v(0)}; });` –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã—Ö –≥—Ä–∞–Ω–∏—Ü –æ–±—ä–µ–º–æ–≤, —á—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è —Å–µ—Ç–∫–∏ –∏ –¥–∞–ª—å–Ω–µ–π—à–∏—Ö —Ä–∞—Å—á—ë—Ç–æ–≤.
    """)

    # Unique(Abs(Boundary{ Surface{f()}; }));
    st.write("""**–°–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–µ–π**""")
    st.write("""
     - –ö–æ–º–∞–Ω–¥–∞ `Unique(Abs(Boundary{ Surface{f()}; }));` —Å–æ–∑–¥–∞—ë—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.
    """)

    # Delete
    st.write("""**–£–¥–∞–ª–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ (Delete)**""")
    st.write("""
     - –ö–æ–º–∞–Ω–¥–∞ `Delete{ Surface{1000}; };` —É–¥–∞–ª—è–µ—Ç –≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ –æ–±—ä–µ–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–ª–∏ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ.
    """)

elif choice == "5. –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Å–ø–∏—Ä–∞–ª–∏":

    st.write("""##### 5. –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Å–ø–∏—Ä–∞–ª–∏""")

    st.write("""
    –í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ —Å–æ–∑–¥–∞—ë—Ç—Å—è —Å–ø–∏—Ä–∞–ª—å. –¶–∏–∫–ª For –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–æ—á–∫–∏ –≤–¥–æ–ª—å —Å–ø–∏—Ä–∞–ª–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ä–∞–¥–∏—É—Å–∞ r, –≤—ã—Å–æ—Ç—ã h –∏ —É–≥–ª–∞ theta.
    """)

    # –¶–∏–∫–ª For –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–æ—á–µ–∫
    st.write("""**–¶–∏–∫–ª For –¥–ª—è —Å–ø–∏—Ä–∞–ª–∏**""")
    st.write("""
     - –¶–∏–∫–ª For –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–æ—á–∫–∏ –Ω–∞ —Å–ø–∏—Ä–∞–ª–∏. –ù–∞–ø—Ä–∏–º–µ—Ä:
    - `Point(1000 + i) = {r * Cos(theta), r * Sin(theta), i * h/npts};` —Å–æ–∑–¥–∞—ë—Ç —Ç–æ—á–∫—É –Ω–∞ —Å–ø–∏—Ä–∞–ª–∏ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏.
    """)

    # Spline
    st.write("""**–°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–ª–∞–π–Ω–∞ (Spline)**""")
    st.write("""
     - –ö–æ–º–∞–Ω–¥–∞ `Spline(x) = {...};` –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫—Ä–∏–≤–æ–π (—Å–ø–ª–∞–π–Ω–∞), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–æ—á–∫–∏.
    """)

    # Wire
    st.write("""**–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–∞ (Wire)**""")
    st.write("""
     - –ö–æ–º–∞–Ω–¥–∞ `Wire(x) = {...};` –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –≤ –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏—è—Ö.
    """)

    # Disk
    st.write("""**–°–æ–∑–¥–∞–Ω–∏–µ –∫—Ä—É–≥ (Disk)**""")
    st.write("""
     - –ö–æ–º–∞–Ω–¥–∞ `Disk(x) = {...};` —Å–æ–∑–¥–∞—ë—Ç –∫—Ä—É–≥ —Å –∑–∞–¥–∞–Ω–Ω—ã–º —Ä–∞–¥–∏—É—Å–æ–º, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –≤ —ç–∫—Å—Ç—Ä—É–∑–∏—è—Ö.
    """)

elif choice == "6. –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ç–∫–∏":

    st.write("""##### 6. –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ç–∫–∏""")

    st.write("""
     - –ü–æ—Å–ª–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≥–µ–æ–º–µ—Ç—Ä–∏–∏, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–µ—Ç–∫–∏. –í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—é—Ç—Å—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–µ—Ç–∫–∏ –¥–ª—è –≤—Å–µ—Ö –æ–±—ä–µ–∫—Ç–æ–≤.
    """)

    # Geometry.NumSubEdges
    st.write("""**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥—Ä–µ–±–µ—Ä (Geometry.NumSubEdges)**""")
    st.write("""
     - –ü–∞—Ä–∞–º–µ—Ç—Ä `Geometry.NumSubEdges` –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥—Ä–µ–±–µ—Ä –≤ –≥–µ–æ–º–µ—Ç—Ä–∏–∏, —á—Ç–æ –≤–ª–∏—è–µ—Ç –Ω–∞ –¥–µ—Ç–∞–ª—å–Ω–æ—Å—Ç—å —Å–µ—Ç–∫–∏.
    """)

    # Mesh.Size
    st.write("""**–†–∞–∑–º–µ—Ä —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–µ—Ç–∫–∏**""")
    st.write("""
    - `Mesh.MeshSizeFromCurvature` —É–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–∞–∑–º–µ—Ä —Å–µ—Ç–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫—Ä–∏–≤–∏–∑–Ω—ã –≥–µ–æ–º–µ—Ç—Ä–∏–∏.
    - `Mesh.MeshSizeMin` –∏ `Mesh.MeshSizeMax` –∑–∞–¥–∞—é—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–µ—Ç–∫–∏.
    """)

elif choice == "7. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ—Ç–∫–∏":

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ—Ç–∫–∏
    st.write("""##### 7. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ—Ç–∫–∏""")
    st.write("""
     - –ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–µ–æ–º–µ—Ç—Ä–∏–∏ –∏ —Å–µ—Ç–∫–∏, –∫–æ–º–∞–Ω–¥–∞ `Mesh 2;` —Å–æ–∑–¥–∞—ë—Ç —Å–µ—Ç–∫—É –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ–ø–∏—Å–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤.
    """)

    # –ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã Mesh
    st.write("""**–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–µ—Ç–∫–∏ (Mesh 2)**""")
    st.write("""
     - –ö–æ–º–∞–Ω–¥–∞ `Mesh 2;` –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–µ—Ç–∫–∏ –¥–ª—è –≤—Å–µ—Ö –æ–±—ä–µ–∫—Ç–æ–≤, –æ–ø–∏—Å–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª–µ .geo.
    """)

elif choice == "8. –ü—Ä–∏–º–µ—Ä —Ñ–∞–π–ª–∞ .geo":

    st.write("""##### 8. –ü—Ä–∏–º–µ—Ä —Ñ–∞–π–ª–∞ .geo""")
    geo_code = """
    SetFactory("OpenCASCADE");
    Circle(1) = {0,0,0, 0.5}; Curve Loop(1) = 1;
    Circle(2) = {0.1,0.05,1, 0.1}; Curve Loop(2) = 2;
    Circle(3) = {-0.1,-0.1,2, 0.3}; Curve Loop(3) = 3;
    ThruSections(1) = {1:3};
    Circle(11) = {2+0,0,0, 0.5}; Curve Loop(11) = 11;
    Circle(12) = {2+0.1,0.05,1, 0.1}; Curve Loop(12) = 12;
    Circle(13) = {2-0.1,-0.1,2, 0.3}; Curve Loop(13) = 13;
    Ruled ThruSections(11) = {11:13};
    v() = Translate{4, 0, 0} { Duplicata{ Volume{1}; } };
    f() = Abs(Boundary{ Volume{v(0)}; });
    e() = Unique(Abs(Boundary{ Surface{f()}; }));
    Fillet{v(0)}{e()}{0.1}
    nturns = 1;
    npts = 20;
    r = 1;
    h = 1 * nturns;
    For i In {0 : npts - 1}
    theta = i * 2*Pi*nturns/npts;
    Point(1000 + i) = {r * Cos(theta), r * Sin(theta), i * h/npts};
    EndFor
    Spline(1000) = {1000 : 1000 + npts - 1};
    Wire(1000) = {1000};
    Disk(1000) = {1,0,0, 0.2};
    Rotate {{1, 0, 0}, {0, 0, 0}, Pi/2} { Surface{1000}; }
    Extrude { Surface{1000}; } Using Wire {1000}
    Delete{ Surface{1000}; }
    Geometry.NumSubEdges = 1000;
    Mesh.MeshSizeFromCurvature = 20;
    Mesh.MeshSizeMin = 0.001;
    Mesh.MeshSizeMax = 0.3;
    Mesh 2;

    """
    show_code(geo_code, "python")

    # –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ –ø—Ä–∏–º–µ—Ä–∞
    def save_example_file():
        example_file_path = './example.geo'
        with open(example_file_path, 'w') as f:
            f.write(geo_code)
        return example_file_path

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–º–µ—Ä–∞
    if st.button("–ü—Ä–∏–º–µ—Ä"):
        example_file_path = save_example_file()
        run_gmsh(example_file_path)