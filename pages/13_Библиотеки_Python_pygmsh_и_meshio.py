import streamlit as st
from PIL import Image
import base64
import subprocess
import os
import math
import gmsh
import numpy as np
import matplotlib.pyplot as plt
import multiprocessing
import plotly.graph_objects as go  # –î–ª—è 3D-–≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏
st.set_page_config(page_title="üóì", layout="wide")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–¥–∞ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
def show_code(code, language="python"):
    st.code(code, language)

def run_gmsh(file_path):
    try:
        env = os.environ.copy()
        env["LIBGL_ALWAYS_SOFTWARE"] = "1"  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥
        subprocess.run(["gmsh", file_path], check=True, env=env)
        st.success("Gmsh —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –≤ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–º —Ä–µ–∂–∏–º–µ!")
    except FileNotFoundError:
        st.error("Gmsh –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ PATH.")
    except subprocess.CalledProcessError as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ Gmsh: {e.returncode}")
        st.text(f"–í—ã–≤–æ–¥ –æ—à–∏–±–∫–∏:\n{e.stderr}")

sections = {
    "–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ Python pygmsh": "",
    "–°—Ä–∞–≤–Ω–µ–Ω–∏–µ pygmsh –∏ gmsh": "",
    "–ß—Ç–æ —Ç–∞–∫–æ–µ meshio?": "",
    "–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏–º–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º–∏": "",
}

choice = st.sidebar.radio("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª", list(sections.keys()))
    

if choice == "–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ Python pygmsh":
    st.write("""##### –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ Python pygmsh""")
    st.write("""
    `pygmsh` ‚Äî —ç—Ç–æ Python-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å `gmsh`, –ø–æ–ø—É–ª—è—Ä–Ω–æ–π open-source –ø—Ä–æ–≥—Ä–∞–º–º–æ–π –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–µ—Ç–æ–∫.
    –û–Ω –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –≥–µ–æ–º–µ—Ç—Ä–∏–∏ –∏ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–µ—Ç–∫–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Python, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –±–æ–ª–µ–µ –≥–∏–±–∫–∏–º –∏ –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ–º—ã–º.
    """)

    # –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
    st.markdown("###### –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ `pygmsh`")
    st.write("""
    - –°–æ–∑–¥–∞–Ω–∏–µ –≥–µ–æ–º–µ—Ç—Ä–∏–π: —Ç–æ—á–∫–∏, –ª–∏–Ω–∏–∏, –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏, –æ–±—ä–µ–º—ã.
    - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ—Ç–æ–∫: 1D, 2D, 3D.
    - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –±—É–ª–µ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π: –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ, –≤—ã—á–∏—Ç–∞–Ω–∏–µ, –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ.
    - –≠–∫—Å–ø–æ—Ä—Ç —Å–µ—Ç–æ–∫ –≤ —Ñ–æ—Ä–º–∞—Ç—ã `.msh`, `.vtk`, `.stl` –∏ –¥—Ä—É–≥–∏–µ.
    - –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Python-–±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º–∏: `numpy`, `scipy`, `matplotlib`, `meshio`.
    """)

    # –†–∞—Å–∫—Ä—ã–≤–∞—é—â–∏–π—Å—è —Å–ø–∏—Å–æ–∫ –¥–ª—è –∫–∞–∂–¥–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
    with st.expander("1. –¢–æ—á–∫–∏"):
        st.write("""
        - **`add_point()`**: –¥–æ–±–∞–≤–ª—è–µ—Ç —Ç–æ—á–∫—É –≤ –≥–µ–æ–º–µ—Ç—Ä–∏—é. –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã `[x, y, z]` –∏ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ **`mesh_size`** (—Ä–∞–∑–º–µ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–µ—Ç–∫–∏).
        """)
        st.code("""
        p1 = geom.add_point([0.0, 0.0, 0.0], mesh_size=0.1)
        """, language="python")

        st.write("""- –ê–Ω–∞–ª–æ–≥ –≤ **gmsh**""")

        st.code("""
        Point(1) = {0.0, 0.0, 0.0, 0.1};
        """, language="python")

    with st.expander("2. –õ–∏–Ω–∏–∏"):
        st.write("""
        - **`add_line()`**: —Å–æ–∑–¥–∞–µ—Ç –ª–∏–Ω–∏—é –º–µ–∂–¥—É –¥–≤—É–º—è —Ç–æ—á–∫–∞–º–∏. **`add_circle_arc()`**: —Å–æ–∑–¥–∞–µ—Ç –¥—É–≥—É –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏.
        """)
        st.code("""
        l1 = geom.add_line(p1, p2)
        arc = geom.add_circle_arc(p1, p2, p3)
        """, language="python")

        st.write("""- –ê–Ω–∞–ª–æ–≥ –≤ **gmsh**""")

        st.code("""
        Line(1) = {1, 2};
        Circle(1) = {1, 2, 3};
        """, language="python")

    with st.expander("3. –ö—Ä–∏–≤—ã–µ –∏ –∫–æ–Ω—Ç—É—Ä—ã"):
        st.write("""
        - **`add_curve_loop()`**: —Å–æ–∑–¥–∞–µ—Ç –∑–∞–º–∫–Ω—É—Ç—ã–π –∫–æ–Ω—Ç—É—Ä –∏–∑ –ª–∏–Ω–∏–π –∏–ª–∏ –∫—Ä–∏–≤—ã—Ö.
        """)
        st.code("""
        loop = geom.add_curve_loop([l1, l2, l3, l4])
        """, language="python")

        st.write("""- –ê–Ω–∞–ª–æ–≥ –≤ **gmsh**""")

        st.code("""
        Curve Loop(1) = {1, 2, 3, 4};
        """, language="python")

    with st.expander("4. –ü–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏"):
        st.write("""
        - **`add_plane_surface()`**: —Å–æ–∑–¥–∞–µ—Ç –ø–ª–æ—Å–∫—É—é –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å –≤–Ω—É—Ç—Ä–∏ –∑–∞–º–∫–Ω—É—Ç–æ–≥–æ –∫–æ–Ω—Ç—É—Ä–∞.
        """)
        st.code("""
        surface = geom.add_plane_surface(loop)
        """, language="python")

        st.write("""- –ê–Ω–∞–ª–æ–≥ –≤ **gmsh**""")

        st.code("""
        Plane Surface(1) = {1};
        """, language="python")

    with st.expander("5. –û–±—ä–µ–º—ã"):
        st.write("""
        - **`add_volume()`**: —Å–æ–∑–¥–∞–µ—Ç –æ–±—ä–µ–º –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–µ–π.
        """)
        st.code("""
        volume = geom.add_volume([surface1, surface2])
        """, language="python")

        st.write("""- –ê–Ω–∞–ª–æ–≥ –≤ **gmsh**""")

        st.code("""
        Volume(1) = {1, 2};
        """, language="python")

    with st.expander("6. –ë—É–ª–µ–≤—ã –æ–ø–µ—Ä–∞—Ü–∏–∏"):
        st.write("""
        - **`boolean_union()`**: –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –æ–±—ä–µ–∫—Ç—ã.

        - **`boolean_difference()`**: –≤—ã—á–∏—Ç–∞–µ—Ç –æ–¥–∏–Ω –æ–±—ä–µ–∫—Ç –∏–∑ –¥—Ä—É–≥–æ–≥–æ.

        - **`boolean_intersection()`**: –Ω–∞—Ö–æ–¥–∏—Ç –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤.
        """)
        st.code("""
        result = geom.boolean_union([obj1, obj2])
        result = geom.boolean_difference(obj1, obj2)
        result = geom.boolean_intersection([obj1, obj2])
        """, language="python")

        st.write("""- –ê–Ω–∞–ª–æ–≥ –≤ **gmsh**""")

        st.code("""
        BooleanUnion{ Surface{1}; Delete; }{ Surface{2}; Delete; }
        BooleanDifference{ Surface{1}; Delete; }{ Surface{2}; Delete; }
        BooleanIntersection{ Surface{1}; Delete; }{ Surface{2}; Delete; }
        """, language="python")

    with st.expander("7. –§–∏–∑–∏—á–µ—Å–∫–∏–µ –≥—Ä—É–ø–ø—ã"):
        st.write("""
        - **`add_physical_group()`**: –≥—Ä—É–ø–ø–∏—Ä—É–µ—Ç –æ–±—ä–µ–∫—Ç—ã –¥–ª—è –∑–∞–¥–∞–Ω–∏—è —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö —Å–≤–æ–π—Å—Ç–≤.
        """)
        st.code("""
        phys_group = geom.add_physical_group("Line", [l1, l2])
        """, language="python")

        st.write("""- –ê–Ω–∞–ª–æ–≥ –≤ **gmsh**""")

        st.code("""
        Physical Line(1) = {1, 2};
    """, language="python")
    def run_python_script_1():
        result = subprocess.run(['python3', 'gmsh_example.py'], capture_output=True, text=True)

    def run_python_script_2():
        
        result = subprocess.run(['python3', 'p_example.py'], capture_output=True, text=True)
        

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞
    if st.button('–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–º–µ—Ä 1'):
        output = run_python_script_1()

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞
    if st.button('–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–º–µ—Ä 2'):
        output = run_python_script_2()

elif choice == "–°—Ä–∞–≤–Ω–µ–Ω–∏–µ pygmsh –∏ gmsh":

    # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å `gmsh`
    st.markdown("##### –°—Ä–∞–≤–Ω–µ–Ω–∏–µ `pygmsh` –∏ `gmsh`")
    st.write("""
    | –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞               | `pygmsh`                                                                 | `gmsh`                                                                 |
    |------------------------------|--------------------------------------------------------------------------|------------------------------------------------------------------------|
    | **–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å**                | Python-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, —É–¥–æ–±–µ–Ω –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Python-–±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º–∏.           | –°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç–æ–≤—ã–π —è–∑—ã–∫ (.geo —Ñ–∞–π–ª—ã) –∏ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å.      |
    | **–ì–∏–±–∫–æ—Å—Ç—å**                 | –í—ã—Å–æ–∫–∞—è, –±–ª–∞–≥–æ–¥–∞—Ä—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é Python.                                 | –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–æ–º .geo —Ñ–∞–π–ª–æ–≤.                                    |
    | **–°–æ–∑–¥–∞–Ω–∏–µ —Å–ª–æ–∂–Ω—ã—Ö –≥–µ–æ–º–µ—Ç—Ä–∏–π**| –£–¥–æ–±–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ü–∏–∫–ª—ã –∏ —É—Å–ª–æ–≤–∏—è Python.                             | –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤ .geo —Ñ–∞–π–ª–∞—Ö.                               |
    | **–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –¥—Ä—É–≥–∏–º–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏** | –õ–µ–≥–∫–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç—Å—è —Å `numpy`, `scipy`, `matplotlib`, `meshio`.      | –¢—Ä–µ–±—É–µ—Ç—Å—è —ç–∫—Å–ø–æ—Ä—Ç/–∏–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö.                                       |
    | **–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ñ–æ—Ä–º–∞—Ç–æ–≤**       | –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —ç–∫—Å–ø–æ—Ä—Ç –≤ `.msh`, `.vtk`, `.stl` –∏ –¥—Ä—É–≥–∏–µ.                 | –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Ñ–æ—Ä–º–∞—Ç–æ–≤, –≤–∫–ª—é—á–∞—è `.msh`, `.stl`, `.step`.      |
    | **–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å**       | –ù–µ–º–Ω–æ–≥–æ –º–µ–¥–ª–µ–Ω–Ω–µ–µ –∏–∑-–∑–∞ Python-–æ–±–µ—Ä—Ç–∫–∏.                                 | –í—ã—Å–æ–∫–∞—è, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –Ω–∞—Ç–∏–≤–Ω—ã–π C++ –∫–æ–¥.                                 |
    """)

elif choice == "–ß—Ç–æ —Ç–∞–∫–æ–µ meshio?":
    st.markdown("##### –ß—Ç–æ —Ç–∞–∫–æ–µ `meshio`?")
    st.write("""
    `meshio` ‚Äî —ç—Ç–æ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏ —Å–µ—Ç–æ–∫ (mesh files) –≤ Python. –û–Ω–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —á—Ç–µ–Ω–∏—è, –∑–∞–ø–∏—Å–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–µ—Ç–æ–∫ –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö, —Ç–∞–∫–∏—Ö –∫–∞–∫ `.msh`, `.vtk`, `.stl`, `.xdmf` –∏ –º–Ω–æ–≥–∏—Ö –¥—Ä—É–≥–∏—Ö.
    """)

    # –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
    st.markdown("##### –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ `meshio`")
    st.write("""
    - **–ß—Ç–µ–Ω–∏–µ –∏ –∑–∞–ø–∏—Å—å —Å–µ—Ç–æ–∫**: –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –±–æ–ª–µ–µ 30 —Ñ–æ—Ä–º–∞—Ç–æ–≤.
    - **–£–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö**: —Ç–æ—á–∫–∏, —è—á–µ–π–∫–∏ –∏ –¥–∞–Ω–Ω—ã–µ.
    - **–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ —è—á–µ–µ–∫**: —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∏, —Ç–µ—Ç—Ä–∞—ç–¥—Ä—ã, –ª–∏–Ω–∏–∏ –∏ –¥—Ä—É–≥–∏–µ.
    - **–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö**: –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ, —É–¥–∞–ª–µ–Ω–∏–µ –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö.
    - **–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –º–µ–∂–¥—É —Ñ–æ—Ä–º–∞—Ç–∞–º–∏**: —É–ø—Ä–æ—â–∞–µ—Ç –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Å–µ—Ç–æ–∫.
    - **–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –¥—Ä—É–≥–∏–º–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º–∏**: `numpy`, `scipy`, `matplotlib`, `pyvista`.
    """)

    # –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã
    st.markdown("##### –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã")
    st.write("""
    `meshio` –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Ñ–æ—Ä–º–∞—Ç–æ–≤, –≤–∫–ª—é—á–∞—è:
    - **Gmsh**: `.msh`
    - **VTK**: `.vtk`, `.vtu`
    - **STL**: `.stl`
    - **XDMF**: `.xdmf`, `.xmf`
    - **OBJ**: `.obj`
    - **OFF**: `.off`
    - **PLY**: `.ply`
    - **ABAQUS**: `.inp`
    - **ANSYS**: `.cdb`
    - **–∏ –º–Ω–æ–≥–∏–µ –¥—Ä—É–≥–∏–µ**.
    """)
elif choice == "–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏–º–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º–∏":
    # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏–º–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º–∏
    st.markdown("##### –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏–º–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º–∏")
    st.write("""
    | –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞               | `meshio`                                                                 | –î—Ä—É–≥–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, `pyvista`, `vtk`)                        |
    |------------------------------|--------------------------------------------------------------------------|------------------------------------------------------------------------|
    | **–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ñ–æ—Ä–º–∞—Ç–æ–≤**       | –ë–æ–ª–µ–µ 30 —Ñ–æ—Ä–º–∞—Ç–æ–≤.                                                       | –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ä–º–∞—Ç–æ–≤.                                      |
    | **–£–¥–æ–±—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è**   | –ü—Ä–æ—Å—Ç–æ–π –∏ –ø–æ–Ω—è—Ç–Ω—ã–π API.                                                  | –ú–æ–∂–µ—Ç —Ç—Ä–µ–±–æ–≤–∞—Ç—å –±–æ–ª—å—à–µ –∫–æ–¥–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã—Ö –∑–∞–¥–∞—á.          |
    | **–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Python**      | –ü–æ–ª–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å `numpy`, `scipy`, `matplotlib`, `pyvista`.           | –ó–∞–≤–∏—Å–∏—Ç –æ—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∏.                                                |
    | **–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö**         | –ü–æ–¥–¥–µ—Ä–∂–∫–∞ point data –∏ cell data.                                        | –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –¥–∞–Ω–Ω—ã—Ö.                                         |
    | **–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å**       | –í—ã—Å–æ–∫–∞—è, –Ω–æ –º–æ–∂–µ—Ç —É—Å—Ç—É–ø–∞—Ç—å –Ω–∞—Ç–∏–≤–Ω—ã–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, `vtk`).       | –í—ã—Å–æ–∫–∞—è, –æ—Å–æ–±–µ–Ω–Ω–æ –¥–ª—è –Ω–∞—Ç–∏–≤–Ω—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫.                              |
    """)